cmake_minimum_required(VERSION 3.20)
file(GLOB_RECURSE H_HEADER_FILES "*.h")
file(GLOB_RECURSE CPP_SOURCE_FILES "src/*.cpp")
set(MANIFEST ${H_HEADER_FILES} ${CPP_SOURCE_FILES})
add_library(libglplayground STATIC ${MANIFEST})
target_include_directories(libglplayground SYSTEM PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/include" "${PROJECT_SOURCE_DIR}/vendor/glm")
target_include_directories(libglplayground PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/include/libglplayground")
target_precompile_headers(libglplayground PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/include/libglplayground/libglppch.h")
target_link_libraries(libglplayground PUBLIC spdlog glfw glad)
set_property(TARGET libglplayground PROPERTY CXX_STANDARD 17)
if(UNIX)
    set_property(TARGET libglplayground PROPERTY OUTPUT_NAME glplayground) # without this, on unix, it would output "liblibglplayground.a," which is just painful to look at
    if(APPLE)
        target_link_libraries(libglplayground PUBLIC -framework OpenGL.framework)
    else()
        target_link_libraries(libglplayground PUBLIC GL)
    endif()
endif()
if(WIN32)
    target_link_libraries(libglplayground PUBLIC opengl32.lib)
endif()