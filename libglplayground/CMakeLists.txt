cmake_minimum_required(VERSION 3.10)
file(GLOB_RECURSE H_HEADER_FILES "*.h")
file(GLOB_RECURSE CPP_SOURCE_FILES "src/*.cpp")
set(MANIFEST ${H_HEADER_FILES} ${CPP_SOURCE_FILES})
add_library(libglplayground STATIC ${MANIFEST})
target_include_directories(libglplayground SYSTEM PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/include" "${PROJECT_SOURCE_DIR}/vendor/stb")
target_include_directories(libglplayground PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/include/libglplayground")
if(${CMAKE_VERSION} VERSION_GREATER_EQUAL 3.16)
    message(STATUS "The current version of CMake (${CMAKE_VERSION}) supports precompiled headers; using PCHs")
    target_precompile_headers(libglplayground PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/include/libglplayground/libglppch.h")
else()
    message(STATUS "The current version of CMake (${CMAKE_VERSION}) does not support precompiled headers; build times will be longer")
endif()
target_link_libraries(libglplayground PUBLIC spdlog glfw glad EnTT glm)
set_property(TARGET libglplayground PROPERTY CXX_STANDARD 17)
if(UNIX)
    set_property(TARGET libglplayground PROPERTY OUTPUT_NAME glplayground) # without this, on unix, it would output "liblibglplayground.a," which is just painful to look at
endif()
